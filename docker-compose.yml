version: '3.8'  # Use 3.8 for health check support
services:
  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"  # RabbitMQ management console
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "check_running"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5

  entry-service:
    build: ./entry-service
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]  # Adjust port and endpoint as needed
      interval: 30s
      timeout: 10s
      retries: 5

  exit-service:
    build: ./exit-service
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]  # Adjust port and endpoint as needed
      interval: 30s
      timeout: 10s
      retries: 5

  backend-service:
    build: ./backend-service
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - REDIS_URL=redis://redis:6379/
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]  # Adjust port and endpoint as needed
      interval: 30s
      timeout: 10s
      retries: 5

  python-server:
    build: ./python-server
    ports:
      - "5000:5000"
    depends_on:
      backend-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]  # Adjust port and endpoint as needed
      interval: 30s
      timeout: 10s
      retries: 5
